import { CommonModule } from '@angular/common';
import { Component, OnInit } from '@angular/core';
import {
  FormGroup,
  FormsModule,
  NonNullableFormBuilder,
  ReactiveFormsModule,
  Validators,
} from '@angular/forms';
import { CheckboxModule } from 'primeng/checkbox';
import { RadioButtonModule } from 'primeng/radiobutton';
import { SelectModule } from 'primeng/select';
import { InputTextModule } from 'primeng/inputtext';
import { ButtonModule } from 'primeng/button';
import { CustomInputComponent, SharedPanelContainerComponent } from 'shared-ui';

interface ReportOptionsTypes {
  id: string;
  reportName: string;
}

interface ReportDescriptionTypes {
  id: string;
  label: string;
  description: string;
}

@Component({
  selector: 'tenant-report-selection',
  imports: [
    SelectModule,
    CheckboxModule,
    FormsModule,
    RadioButtonModule,
    CommonModule,
    InputTextModule,
    ButtonModule,
    ReactiveFormsModule,
    CustomInputComponent,
    SharedPanelContainerComponent
],
  templateUrl: './report-selection.component.html',
  styleUrl: './report-selection.component.css',
})
export class ReportSelectionComponent implements OnInit {
  selectedOrientation: string = 'default';
  isChecked: boolean = false;
  reportForm!: FormGroup;
  constructor(private fb: NonNullableFormBuilder) {}
  reportOptions: ReportOptionsTypes[] = [
    { id: '1', reportName: 'Daily Admission and Discharge Report' },
    { id: '2', reportName: 'Bed Occupancy Report' },
    { id: '3', reportName: 'Patient Census Report' },
    { id: '4', reportName: 'Outpatient vs Inpatient Statistics Report' },
    { id: '5', reportName: 'Department-wise Patient Load Report' },
    { id: '6', reportName: 'Duty Roster Report (Staff Scheduling)' },
    { id: '7', reportName: 'Hospital Revenue Report' },
    { id: '8', reportName: 'Patient Medical History Report' },
    { id: '9', reportName: 'Doctor’s Rounds Summary' },
    { id: '10', reportName: 'Discharge Summary Report' },
    { id: '11', reportName: 'Surgical Case Summary' },
  ];

  reportsDescription: ReportDescriptionTypes[] = [
    {
      id: 'ADM001',
      label: 'Daily Admission and Discharge Report',
      description: 'Tracks daily patient admissions and discharges for all departments.',
    },
    {
      id: 'BED002',
      label: 'Bed Occupancy Report',
      description: 'Shows bed utilization by ward or department, useful for resource planning.',
    },
    {
      id: 'CEN003',
      label: 'Patient Census Report',
      description: 'Summarizes the total number of inpatients and outpatients in the hospital.',
    },
    {
      id: 'OUT004',
      label: 'Outpatient vs Inpatient Statistics Report',
      description: 'Compares outpatient visits and inpatient admissions over a given time.',
    },
    {
      id: 'DEP005',
      label: 'Department-wise Patient Load Report',
      description: 'Analyzes patient volume handled by each department.',
    },
    {
      id: 'DUT006',
      label: 'Duty Roster Report',
      description: 'Lists staff duty schedules including doctors, nurses, and support staff.',
    },
    {
      id: 'REV007',
      label: 'Hospital Revenue Report',
      description: 'Summarizes total revenue generated by various services and departments.',
    },
    {
      id: 'MED008',
      label: 'Patient Medical History Report',
      description: 'Detailed medical history of an individual patient.',
    },
    {
      id: 'DRR009',
      label: 'Doctor’s Rounds Summary',
      description: 'Log of all doctor visits, observations, and instructions for inpatients.',
    },
    {
      id: 'DIS010',
      label: 'Discharge Summary Report',
      description: 'Summarizes patient diagnosis, treatment, and status at discharge.',
    },
    {
      id: 'SUR011',
      label: 'Surgical Case Summary',
      description: 'Details of surgical procedures conducted with outcomes and surgeon notes.',
    },
    {
      id: 'REF012',
      label: 'Referral Report',
      description: 'Tracks cases referred to other departments or external hospitals.',
    },
    {
      id: 'AUD013',
      label: 'Clinical Audit Report',
      description: 'Evaluates clinical practices against standard treatment protocols.',
    },
  ];

  ngOnInit(): void {
    this.reportForm = this.fb.group({
      report: ['', Validators.required],
      reportName: ['', Validators.required],
      documentId: ['', Validators.required],
    });
    this.reportForm.get('report')!.valueChanges.subscribe((selectedId) => {
      const selectedReport = this.reportsDescription.find((report) => report.id === selectedId);
      if (selectedReport) {
        this.reportForm.patchValue({
          documentId: selectedReport.id,
          reportName: selectedReport.label,
        });
      } else {
        this.reportForm.patchValue({ documentId: '', reportName: '' });
      }
    });
  }
}
